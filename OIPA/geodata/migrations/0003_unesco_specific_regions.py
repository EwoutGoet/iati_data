# Generated by Django 2.0.6 on 2018-07-18 14:16
import os
import json

from django.db import migrations

'''
This is a data migration to add Unesco-specific regions to the new OIPA.
See: #667
'''


def add_unesco__specific_regions(apps, schema_editor):
    Region = apps.get_model('geodata', 'Region')
    RegionVocabulary = apps.get_model('iati_vocabulary', 'RegionVocabulary')

    # FIXME: initial OIPA's tasks have to be ran in order for this to work:

    # "The region reported corresponds to a region vocabulary maintained by
    # the reporting organisation for this activity":
    reporting_org_region_vocabulary = RegionVocabulary.objects.filter(
        code=99
    ).first()

    if reporting_org_region_vocabulary:

        with open(
            os.path.dirname(os.path.abspath(__file__)) +
                '/data_files/unesco_specific_regions.json') as f:
            data = json.load(f)

            for region in data:
                new_unesco_region = Region.objects.create(
                    added_manually=True,
                    code=region['code'],
                    name=region['label'],
                    region_vocabulary=reporting_org_region_vocabulary,
                )

                new_unesco_region.save()

                print('\nManually added new Unesco-specific region: {0}'.format(
                    new_unesco_region.name
                ))


def remove_unesco_specific_regions(apps, schema_editor):
    Region = apps.get_model('geodata', 'Region')
    RegionVocabulary = apps.get_model('iati_vocabulary', 'RegionVocabulary')

    # FIXME: initial OIPA's tasks have to be ran in order for this to work:

    # "The region reported corresponds to a region vocabulary maintained by
    # the reporting organisation for this activity":
    reporting_org_region_vocabulary = RegionVocabulary.objects.filter(
        code=99
    ).first()

    if reporting_org_region_vocabulary:
        pass
        with open(
            os.path.dirname(os.path.abspath(__file__)) +
                '/data_files/unesco_specific_regions.json') as f:
            data = json.load(f)

            for region in data:
                new_unesco_region = Region.objects.filter(
                    added_manually=True,
                    code=region['code'],
                    name=region['label'],
                    region_vocabulary=reporting_org_region_vocabulary,
                ).first()

                if new_unesco_region:

                    new_unesco_region.delete()

                    print('\nRemoved Unesco-specific region: {0}'.format(
                        new_unesco_region.name
                    ))



class Migration(migrations.Migration):

    dependencies = [
        ('geodata', '0002_region_added_manually'),
    ]

    operations = [
        migrations.RunPython(
            add_unesco__specific_regions,
            remove_unesco_specific_regions,
        ),
    ]
